"""Add exporter and task models

Revision ID: d36ec4a30673
Revises: 5b4ae26c26f5
Create Date: 2025-07-04 16:16:13.135419

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd36ec4a30673'
down_revision: Union[str, None] = '5b4ae26c26f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exporters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('exporter_type', sa.Enum('CUBIC_MEDIA', 'ADDREALITY', name='exportertype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ERROR', 'CONFIGURING', name='exporterstatus'), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('container_name', sa.String(length=200), nullable=True),
    sa.Column('container_port', sa.Integer(), nullable=True),
    sa.Column('container_status', sa.String(length=50), nullable=True),
    sa.Column('last_metrics_count', sa.Integer(), nullable=True),
    sa.Column('last_successful_collection', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exporters_id'), 'exporters', ['id'], unique=False)
    op.create_table('exporter_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exporter_id', sa.Integer(), nullable=False),
    sa.Column('api_endpoint', sa.String(length=500), nullable=True),
    sa.Column('mac_addresses', sa.JSON(), nullable=True),
    sa.Column('polling_interval', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('addreality_config', sa.JSON(), nullable=True),
    sa.Column('prometheus_labels', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('cache_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['exporter_id'], ['exporters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exporter_configurations_id'), 'exporter_configurations', ['id'], unique=False)
    op.create_table('task_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('exporter_id', sa.Integer(), nullable=True),
    sa.Column('prometheus_query', sa.Text(), nullable=False),
    sa.Column('threshold_operator', sa.Enum('GREATER_THAN', 'LESS_THAN', 'EQUALS', 'NOT_EQUALS', 'GREATER_EQUAL', 'LESS_EQUAL', name='taskthresholdoperator'), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=False),
    sa.Column('evaluation_window', sa.String(length=20), nullable=True),
    sa.Column('action_type', sa.Enum('DEVICE_REBOOT', 'DEVICE_RESTART', 'CUSTOM_COMMAND', 'SMS_NOTIFICATION', name='taskactiontype'), nullable=False),
    sa.Column('target_selector', sa.Text(), nullable=True),
    sa.Column('command_template_id', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('cooldown_period', sa.String(length=20), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('retry_delay', sa.String(length=20), nullable=True),
    sa.Column('execution_count', sa.Integer(), nullable=True),
    sa.Column('last_execution', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_success', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['command_template_id'], ['command_templates.id'], ),
    sa.ForeignKeyConstraint(['exporter_id'], ['exporters.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_templates_id'), 'task_templates', ['id'], unique=False)
    op.create_table('task_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_template_id', sa.Integer(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('triggered_by_query', sa.Text(), nullable=False),
    sa.Column('triggered_value', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='taskexecutionstatus'), nullable=False),
    sa.Column('devices_affected', sa.JSON(), nullable=True),
    sa.Column('execution_result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['task_template_id'], ['task_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_executions_id'), 'task_executions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_executions_id'), table_name='task_executions')
    op.drop_table('task_executions')
    op.drop_index(op.f('ix_task_templates_id'), table_name='task_templates')
    op.drop_table('task_templates')
    op.drop_index(op.f('ix_exporter_configurations_id'), table_name='exporter_configurations')
    op.drop_table('exporter_configurations')
    op.drop_index(op.f('ix_exporters_id'), table_name='exporters')
    op.drop_table('exporters')
    # ### end Alembic commands ###
