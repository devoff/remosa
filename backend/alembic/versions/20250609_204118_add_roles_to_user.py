"""Add roles and platform_id to User model

Revision ID: [ЧИСЛО_ЗДЕСЬ_БУДЕТ]
Revises: [ПРЕДЫДУЩИЙ_РЕВИЖН_ЗДЕСЬ]
Create Date: YYYY-MM-DD HH:MM:SS.SSSSSS

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '[18]' # Замените на сгенерированный ID
down_revision = '[17' # Замените на предыдущий ревижн
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', sa.String(), nullable=False, server_default='user'))
    op.add_column('users', sa.Column('is_superuser', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('users', sa.Column('platform_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_users_platform_id', 'users', 'clients', ['platform_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_users_platform_id', 'users', type_='foreignkey')
    op.drop_column('users', 'platform_id')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_superuser')
    op.drop_column('users', 'role')
    # ### end Alembic commands ###
