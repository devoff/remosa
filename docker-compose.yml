version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=/app
      - DEBUG=true  # Включен для разработки
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app  # Только для разработки
      - ./backend/alembic:/app/alembic  # Для миграций
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./front_new
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_WS_URL: ${VITE_WS_URL}
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./.env
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_WS_URL: ${VITE_WS_URL}
      NODE_ENV: production
      GENERATE_SOURCEMAP: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:1.21-alpine  # более легковесный образ
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx  # логи nginx (раскомментировано для отладки)


volumes:
  backend_code:
  frontend_node_modules: