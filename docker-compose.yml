version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app  # Только для разработки
      - ./backend/alembic:/app/alembic  # Для миграций
    depends_on:
      - redis

  frontend:
    build: 
      context: ./front_new
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./front_new:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - GENERATE_SOURCEMAP=false
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.21-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend

volumes:
  redis_data:
  frontend_node_modules: